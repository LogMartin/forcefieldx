// ******************************************************************************
//
// Title:       Force Field X.
// Description: Force Field X - Software for Molecular Biophysics.
// Copyright:   Copyright (c) Michael J. Schnieders 2001-2020.
//
// This file is part of Force Field X.
//
// Force Field X is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 3 as published by
// the Free Software Foundation.
//
// Force Field X is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// Force Field X; if not, write to the Free Software Foundation, Inc., 59 Temple
// Place, Suite 330, Boston, MA 02111-1307 USA
//
// Linking this library statically or dynamically with other modules is making a
// combined work based on this library. Thus, the terms and conditions of the
// GNU General Public License cover the whole combination.
//
// As a special exception, the copyright holders of this library give you
// permission to link this library with independent modules to produce an
// executable, regardless of the license terms of these independent modules, and
// to copy and distribute the resulting executable under terms of your choice,
// provided that you also meet, for each linked independent module, the terms
// and conditions of the license of that module. An independent module is a
// module which is not derived from or based on this library. If you modify this
// library, you may extend this exception to your version of the library, but
// you are not obligated to do so. If you do not wish to do so, delete this
// exception statement from your version.
//
// ******************************************************************************
package ffx.potential.nonbonded.implicit;

import static java.lang.String.format;
import static org.apache.commons.math3.util.FastMath.floor;

import java.util.logging.Logger;

/**
 * This class is used to compute interstitial space integrals of the form 1/r^6.
 * <p>
 * Inputs: radius of atom i (rho i) and radius of atom j (rho j) Outputs: Aij and Bij
 * (interpolated/extrapolated from pre-determined tables)
 * <p>
 * Aij and Bij are constants used in the approximation of the 1/r^6 integral over pairwise neck
 * regions described in Aguilar et. al. 2010. The neck integral approximation is as follows:
 * <p>
 * neck_integral(rij, rho i, rho j) = Aij * (rij - Bij)^4 * (rho i + rho j + 2 * rho w - rij)^4
 * </p>
 * Where rij is the separation distance between atoms i and j with radii rho i and rho j,
 * respectively, and rho w is the radius of water (1.4 A).
 * <p>
 * Aij and Bij are determined for a set of discrete radii based on benchmark PB calculations of the
 * maximum separation distance and neck integral value. Bij is set as 2*(maximum rij) - (rho i + rho
 * j + 2 * rho w) and Aij is set such that the value of the neck integral approximation at the
 * maximum separation distance matches the maximum neck integral value calculated using PB.
 * <p>
 * Citations: Aguilar, B.; Shadrach, R.; Onufriev, A. V. Reducing the secondary structure bias in the
 * generalized Born model via R6 effective radii. J. Chem. Theory Comput. 2010, 6, 3613âˆ’3630.
 *
 * @author Rae A. Corrigan
 * @since 1.0
 */
public class NeckIntegral {

  private static final Logger logger = Logger.getLogger(NeckIntegral.class.getName());

  /**
   * The set of radii values covered by the Aij & Bij tables (0.80 A to 2.50 A in increments of 0.05
   * A).
   * <p>
   * The intent is to use AMOEBA van der Waals radii as input, which fall within this range. The use
   * of fit electrostatic radii is possible, but was not studied.
   * <p>
   * For values outside the studied range, extrapolation is performed. For value within the studied
   * range, but not at stored points, interpolation is performed.
   */
  private static final double[] radArray = {
      0.80, 0.85, 0.90, 0.95, 1.00, 1.05, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35, 1.40,
      1.45, 1.50, 1.55, 1.60, 1.65, 1.70, 1.75, 1.80, 1.85, 1.90, 1.95, 2.00, 2.05,
      2.10, 2.15, 2.20, 2.25, 2.30, 2.35, 2.40, 2.45, 2.50};

  private static final double MINIMUM_RADIUS = 0.80;
  private static final double MAXIMUM_RADIUS = 2.50;
  private static final double SPACING = 0.05;
  private static final int NUM_POINTS = radArray.length;

  /**
   * Get the Table indices based on the supplied radius value.
   *
   * @param rho Radius value (A).
   * @return The Aij/Bij Table indices for one dimension.
   */
  private static int[] getBounds(double rho) {
    double calculateIndex = (rho - MINIMUM_RADIUS) / SPACING;
    int below = (int) floor(calculateIndex);
    int above = below + 1;

    if (above >= NUM_POINTS) {
      // Extrapolate up from the top table values.
      below = NUM_POINTS - 1;
      above = NUM_POINTS - 2;
    } else if (below < 0) {
      // If below is less than 0, extrapolate down from the bottom table values.
      below = 0;
      above = 1;
    }

    return new int[] {below, above};
  }


  /**
   * The magnitude of the Neck integral, parameterized by two input atomic radii sizes.
   * <p>
   * Aij is a (non-symmetric) 35x35 array of parameterized constants last updated 09 Apr 21 by Rae
   * Corrigan.
   * <p>
   * The units of the Aij matrix are Angstroms^(-11).
   * <p>
   * Usage is as follows: AijAguilarOnufriev[decreened][descreener]
   */
  private static final double[][] Aij = {
      {0.0003097050, 0.0007592239, 0.0005110285, 0.0004876772, 0.0002423650, 0.0000780510,
          0.0000576579, 0.0000566673, 0.0000369030, 0.0000371710, 0.0000262412, 0.0000188790,
          0.0000254270, 0.0000139580, 0.0000137429, 0.0000132076, 0.0000098954, 0.0000059126,
          0.0000134415, 0.0000075626, 0.0000060445, 0.0000042965, 0.0000057952, 0.0000060765,
          0.0000047477, 0.0000035741, 0.0000035615, 0.0000028458, 0.0000029159, 0.0000029267,
          0.0000044798, 0.0000019593, 0.0000014695, 0.0000020118, 0.0000016098},
      {0.0003577260, 0.0002436663, 0.0001686729, 0.0005792321, 0.0000809300, 0.0000528480,
          0.0000388955, 0.0000506830, 0.0000466797, 0.0000192779, 0.0000245051, 0.0000237308,
          0.0000172356, 0.0000173241, 0.0000096495, 0.0000125021, 0.0000090751, 0.0000067791,
          0.0000096652, 0.0000052047, 0.0000071668, 0.0000053364, 0.0000040739, 0.0000041071,
          0.0000043343, 0.0000061313, 0.0000044695, 0.0000019166, 0.0000026910, 0.0000015480,
          0.0000016567, 0.0000017133, 0.0000018391, 0.0000013781, 0.0000026696},
      {0.0004142880, 0.0002814480, 0.0001943300, 0.0001361617, 0.0000963988, 0.0000672771,
          0.0000633443, 0.0000602701, 0.0000323270, 0.0000311209, 0.0000388024, 0.0000221066,
          0.0000163670, 0.0000204169, 0.0000156765, 0.0000115704, 0.0000081721, 0.0000115478,
          0.0000067500, 0.0000086669, 0.0000067461, 0.0000049641, 0.0000037247, 0.0000037772,
          0.0000052373, 0.0000031004, 0.0000023415, 0.0000022885, 0.0000032472, 0.0000019418,
          0.0000019753, 0.0000021066, 0.0000022243, 0.0000012693, 0.0000013500},
      {0.0004811110, 0.0003259489, 0.0002244619, 0.0001568735, 0.0000685571, 0.0000794985,
          0.0000449849, 0.0000436757, 0.0000392170, 0.0000379157, 0.0000348687, 0.0000347138,
          0.0000262261, 0.0000191720, 0.0000186668, 0.0000140537, 0.0000102502, 0.0000177971,
          0.0000107560, 0.0000061329, 0.0000080272, 0.0000044402, 0.0000060725, 0.0000046079,
          0.0000035314, 0.0000037639, 0.0000037987, 0.0000038086, 0.0000029809, 0.0000023216,
          0.0000018230, 0.0000018587, 0.0000014923, 0.0000020719, 0.0000016258},
      {0.0005603070, 0.0003785234, 0.0002599526, 0.0001811975, 0.0000802910, 0.0000726381,
          0.0000721388, 0.0000509734, 0.0000267492, 0.0000360196, 0.0000326284, 0.0000179177,
          0.0000236865, 0.0000131240, 0.0000129713, 0.0000167212, 0.0000091845, 0.0000281149,
          0.0000095512, 0.0000098196, 0.0000055235, 0.0000072319, 0.0000056114, 0.0000043028,
          0.0000033283, 0.0000034140, 0.0000035919, 0.0000020454, 0.0000027570, 0.0000020529,
          0.0000021720, 0.0000023198, 0.0000014011, 0.0000018780, 0.0000014788},
      {0.0006544720, 0.0004408318, 0.0003018820, 0.0002098475, 0.0000988920, 0.0000658303,
          0.0000852089, 0.0000472720, 0.0000325993, 0.0000419544, 0.0000234673, 0.0000219513,
          0.0000285562, 0.0001074511, 0.0000156641, 0.0000116885, 0.0000112513, 0.0000329411,
          0.0000065831, 0.0000065756, 0.0000067493, 0.0000066423, 0.0000037720, 0.0000051589,
          0.0000040743, 0.0000032038, 0.0000031754, 0.0000032186, 0.0000033561, 0.0000019570,
          0.0000027099, 0.0000016383, 0.0000012791, 0.0000012872, 0.0000013748},
      {0.0007668180, 0.0005149182, 0.0003515745, 0.0002436951, 0.0000879206, 0.0000601749,
          0.0000776839, 0.0000563961, 0.0000514039, 0.0000282224, 0.0000272269, 0.0000201679,
          0.0000195788, 0.0000142894, 0.0000144802, 0.0000137608, 0.0000078458, 0.0000387195,
          0.0000079963, 0.0000078443, 0.0000081883, 0.0000060659, 0.0000061476, 0.0000036479,
          0.0000048450, 0.0000050957, 0.0000037782, 0.0000038443, 0.0000030609, 0.0000031543,
          0.0000018336, 0.0000025988, 0.0000020871, 0.0000015916, 0.0000016544},
      {0.0006544720, 0.0006033087, 0.0004106603, 0.0001033327, 0.0001047383, 0.0000714755,
          0.0000519146, 0.0000680662, 0.0000473853, 0.0000346326, 0.0000325052, 0.0000310878,
          0.0000182128, 0.0000173020, 0.0000172327, 0.0000098478, 0.0000124923, 0.0000456634,
          0.0000095861, 0.0000072838, 0.0000097267, 0.0000072382, 0.0000055223, 0.0000042525,
          0.0000043934, 0.0000034617, 0.0000035716, 0.0000020077, 0.0000027899, 0.0000029003,
          0.0000017029, 0.0000017658, 0.0000018719, 0.0000014386, 0.0000014797},
      {0.0003781360, 0.0001435263, 0.0004811540, 0.0003315068, 0.0001212766, 0.0000870790,
          0.0000610720, 0.0000344246, 0.0000323011, 0.0000315237, 0.0000222643, 0.0000294766,
          0.0000220791, 0.0000157072, 0.0000154689, 0.0000156496, 0.0000148904, 0.0000085851,
          0.0000113901, 0.0000050417, 0.0000065983, 0.0000086943, 0.0000037962, 0.0000039236,
          0.0000052187, 0.0000031481, 0.0000031520, 0.0000031954, 0.0000032999, 0.0000033736,
          0.0000027042, 0.0000021161, 0.0000022302, 0.0000017521, 0.0000013653},
      {0.0004367680, 0.0003984882, 0.0001148874, 0.0001922112, 0.0000639814, 0.0001041215,
          0.0000722494, 0.0000407453, 0.0000496624, 0.0000490109, 0.0000268701, 0.0000342067,
          0.0000255602, 0.0000391941, 0.0000246858, 0.0000137710, 0.0000100128, 0.0000078699,
          0.0000103962, 0.0000078680, 0.0000078845, 0.0000060495, 0.0000059794, 0.0000036557,
          0.0000047713, 0.0000028474, 0.0000038062, 0.0000022049, 0.0000030297, 0.0000017685,
          0.0000018943, 0.0000025921, 0.0000011780, 0.0000020799, 0.0000016378},
      {0.0005058270, 0.0003440837, 0.0002378553, 0.0001117775, 0.0001286921, 0.0000926222,
          0.0000674361, 0.0000614540, 0.0000595995, 0.0000439942, 0.0000237961, 0.0000178457,
          0.0000231476, 0.0000226570, 0.0000168116, 0.0000165187, 0.0000160718, 0.0000093939,
          0.0000123552, 0.0000093960, 0.0000095680, 0.0000041010, 0.0000072269, 0.0000042707,
          0.0000043680, 0.0000033842, 0.0000034382, 0.0000034838, 0.0000020780, 0.0000021096,
          0.0000022090, 0.0000017398, 0.0000018527, 0.0000024990, 0.0000014697},
      {0.0005874150, 0.0003984882, 0.0002747359, 0.0001276673, 0.0000761636, 0.0000818497,
          0.0000589069, 0.0000430961, 0.0000539210, 0.0000508096, 0.0000221657, 0.0000208380,
          0.0000154897, 0.0000152939, 0.0000202523, 0.0000085454, 0.0000108980, 0.0000110105,
          0.0000085320, 0.0000064242, 0.0000085867, 0.0000065888, 0.0000049620, 0.0000050074,
          0.0000038897, 0.0000040666, 0.0000040735, 0.0000041374, 0.0000024949, 0.0000019415,
          0.0000026664, 0.0000020766, 0.0000022123, 0.0000013089, 0.0000013487},
      {0.0005058270, 0.0004627630, 0.0003181756, 0.0001137197, 0.0000796864, 0.0000714365,
          0.0000719092, 0.0000506441, 0.0000473457, 0.0000355514, 0.0000338638, 0.0000248051,
          0.0000185898, 0.0000176889, 0.0000178933, 0.0000132312, 0.0000126119, 0.0000272321,
          0.0000077202, 0.0000075197, 0.0000058260, 0.0000076483, 0.0000044835, 0.0000046047,
          0.0000061325, 0.0000037214, 0.0000037227, 0.0000021536, 0.0000039237, 0.0000023363,
          0.0000023717, 0.0000025208, 0.0000026169, 0.0000020626, 0.0000021133},
      {0.0005874150, 0.0003984882, 0.0003694963, 0.0001742529, 0.0000954628, 0.0000853418,
          0.0000821513, 0.0000605032, 0.0000552523, 0.0000415108, 0.0000409189, 0.0000295789,
          0.0000168635, 0.0000216488, 0.0000214574, 0.0000092645, 0.0000117889, 0.0000116629,
          0.0000090058, 0.0000068505, 0.0000093066, 0.0000091844, 0.0000070436, 0.0000054133,
          0.0000054635, 0.0000043661, 0.0000044468, 0.0000025664, 0.0000034985, 0.0000036430,
          0.0000022046, 0.0000013108, 0.0000023388, 0.0000013910, 0.0000019287},
      {0.0002432040, 0.0004627630, 0.0003181756, 0.0001584885, 0.0000842727, 0.0000765228,
          0.0000746485, 0.0000528845, 0.0000502366, 0.0000369772, 0.0000356951, 0.0000348428,
          0.0000256018, 0.0000259157, 0.0000145079, 0.0000140357, 0.0000137494, 0.0000080401,
          0.0000109526, 0.0000047770, 0.0000048004, 0.0000081697, 0.0000036483, 0.0000065252,
          0.0000050141, 0.0000038757, 0.0000040372, 0.0000030932, 0.0000031096, 0.0000014620,
          0.0000026079, 0.0000026539, 0.0000021092, 0.0000021613, 0.0000013269},
      {0.0005121330, 0.0005389380, 0.0001350636, 0.0001825491, 0.0000997830, 0.0000928090,
          0.0000852213, 0.0000624223, 0.0000455825, 0.0000424028, 0.0000241348, 0.0000407458,
          0.0000174774, 0.0000177280, 0.0000170090, 0.0000131193, 0.0000163288, 0.0000093611,
          0.0000095998, 0.0000096323, 0.0000073650, 0.0000056188, 0.0000055862, 0.0000057923,
          0.0000045083, 0.0000046454, 0.0000047185, 0.0000036336, 0.0000029338, 0.0000016973,
          0.0000030411, 0.0000024228, 0.0000014657, 0.0000015026, 0.0000015528},
      {0.0006841090, 0.0002200585, 0.0000660389, 0.0001684431, 0.0000882199, 0.0001060656,
          0.0000597236, 0.0000558317, 0.0000680728, 0.0000394099, 0.0000284578, 0.0000271635,
          0.0000275367, 0.0000203053, 0.0000150535, 0.0000200459, 0.0000193844, 0.0000087264,
          0.0000086712, 0.0000065631, 0.0000066949, 0.0000065514, 0.0000038932, 0.0000052002,
          0.0000030717, 0.0000032410, 0.0000032102, 0.0000042468, 0.0000019807, 0.0000020088,
          0.0000035902, 0.0000028633, 0.0000022634, 0.0000017764, 0.0000024301},
      {0.0005121330, 0.0001923730, 0.0000999634, 0.0001441284, 0.0001316377, 0.0000734149,
          0.0000687584, 0.0000660877, 0.0000475576, 0.0000452661, 0.0000334705, 0.0000245366,
          0.0000316074, 0.0000237646, 0.0000176203, 0.0000132055, 0.0000133368, 0.0000133281,
          0.0000100931, 0.0000101423, 0.0000104283, 0.0000045984, 0.0000059216, 0.0000046452,
          0.0000047622, 0.0000049109, 0.0000022566, 0.0000022205, 0.0000039924, 0.0000018213,
          0.0000018767, 0.0000033714, 0.0000015416, 0.0000012224, 0.0000016705},
      {0.0003189750, 0.0004039664, 0.0001541583, 0.0001690837, 0.0000932677, 0.0001098143,
          0.0000823438, 0.0001404677, 0.0000714240, 0.0000541873, 0.0000299154, 0.0000218667,
          0.0000290161, 0.0000209050, 0.0000159222, 0.0000157330, 0.0000089188, 0.0000092312,
          0.0000156720, 0.0000089970, 0.0000092932, 0.0000053278, 0.0000053057, 0.0000055431,
          0.0000057938, 0.0000044001, 0.0000034556, 0.0000034089, 0.0000027485, 0.0000021693,
          0.0000013332, 0.0000017703, 0.0000018401, 0.0000018827, 0.0000019436},
      {0.0005121330, 0.0002523075, 0.0003229154, 0.0001501659, 0.0001076917, 0.0000586240,
          0.0000956265, 0.0000683461, 0.0000379253, 0.0000460285, 0.0000349541, 0.0000260288,
          0.0000254029, 0.0000112707, 0.0000187778, 0.0000137548, 0.0000107396, 0.0000216564,
          0.0000104838, 0.0000081371, 0.0000062261, 0.0000063697, 0.0000063454, 0.0000065214,
          0.0000065384, 0.0000040274, 0.0000052883, 0.0000023303, 0.0000032209, 0.0000043474,
          0.0000020086, 0.0000020763, 0.0000021650, 0.0000016839, 0.0000017901},
      {0.0005931090, 0.0004039664, 0.0003739730, 0.0002612152, 0.0000954074, 0.0001132244,
          0.0000832206, 0.0000616813, 0.0000558803, 0.0000418931, 0.0000310447, 0.0000227967,
          0.0000174494, 0.0000295158, 0.0000214030, 0.0000161553, 0.0000160081, 0.0000125192,
          0.0000123644, 0.0000092688, 0.0000073988, 0.0000074799, 0.0000055974, 0.0000045390,
          0.0000076397, 0.0000046712, 0.0000047431, 0.0000036648, 0.0000022015, 0.0000029854,
          0.0000031535, 0.0000014457, 0.0000025469, 0.0000019874, 0.0000020889},
      {0.0002782050, 0.0004678393, 0.0001769091, 0.0002261495, 0.0001457967, 0.0000788714,
          0.0000973937, 0.0000537447, 0.0000518259, 0.0000641631, 0.0000357379, 0.0000271341,
          0.0000341935, 0.0000259960, 0.0000254764, 0.0000144973, 0.0000085580, 0.0000216564,
          0.0000085090, 0.0000085244, 0.0000085842, 0.0000050937, 0.0000066554, 0.0000051978,
          0.0000030973, 0.0000054381, 0.0000042658, 0.0000025111, 0.0000026043, 0.0000035329,
          0.0000020902, 0.0000016737, 0.0000029676, 0.0000013707, 0.0000014500},
      {0.0005931090, 0.0005433002, 0.0002006930, 0.0001819424, 0.0001292266, 0.0000900995,
          0.0000874535, 0.0000644655, 0.0000443910, 0.0000579433, 0.0000426911, 0.0000303202,
          0.0000183810, 0.0000307745, 0.0000169127, 0.0000175064, 0.0000097960, 0.0000169136,
          0.0000099347, 0.0000098320, 0.0000078319, 0.0000077627, 0.0000035437, 0.0000035652,
          0.0000046979, 0.0000028779, 0.0000049619, 0.0000029638, 0.0000030145, 0.0000040840,
          0.0000024507, 0.0000020036, 0.0000015491, 0.0000020867, 0.0000028679},
      {0.0006887750, 0.0002197005, 0.0001813925, 0.0001226121, 0.0001480515, 0.0000819138,
          0.0001010051, 0.0000743581, 0.0000532380, 0.0000391550, 0.0000373526, 0.0000278925,
          0.0000212805, 0.0000204711, 0.0000203443, 0.0000153323, 0.0000112998, 0.0000089245,
          0.0000115032, 0.0000115544, 0.0000091237, 0.0000040405, 0.0000040877, 0.0000071717,
          0.0000054883, 0.0000043865, 0.0000044089, 0.0000034636, 0.0000036061, 0.0000021630,
          0.0000017096, 0.0000023398, 0.0000018249, 0.0000014684, 0.0000019644},
      {0.0002034570, 0.0005433002, 0.0002063198, 0.0001406494, 0.0001030491, 0.0000924448,
          0.0000675304, 0.0000656600, 0.0000503075, 0.0000447104, 0.0000435345, 0.0000320070,
          0.0000238872, 0.0000140604, 0.0000136790, 0.0000180108, 0.0000132485, 0.0000101609,
          0.0000138151, 0.0000101821, 0.0000079997, 0.0000048130, 0.0000079791, 0.0000048819,
          0.0000049912, 0.0000051636, 0.0000030582, 0.0000040586, 0.0000041908, 0.0000025091,
          0.0000015545, 0.0000026822, 0.0000021795, 0.0000021885, 0.0000010431},
      {0.0003173450, 0.0001615616, 0.0002441523, 0.0001265035, 0.0001502516, 0.0001100520,
          0.0001034167, 0.0000749844, 0.0000558244, 0.0000401076, 0.0000291369, 0.0000285326,
          0.0000281414, 0.0000166314, 0.0000207328, 0.0000203566, 0.0000120071, 0.0000289694,
          0.0000119246, 0.0000091714, 0.0000094429, 0.0000042448, 0.0000043008, 0.0000056600,
          0.0000044665, 0.0000035514, 0.0000045880, 0.0000047646, 0.0000028543, 0.0000017480,
          0.0000017883, 0.0000032449, 0.0000025185, 0.0000019473, 0.0000012172},
      {0.0002034570, 0.0002513188, 0.0002155168, 0.0001462163, 0.0001034330, 0.0000955660,
          0.0001188932, 0.0000666702, 0.0000484556, 0.0000458936, 0.0000342200, 0.0000334217,
          0.0000326782, 0.0000187826, 0.0000241407, 0.0000140166, 0.0000138417, 0.0000080942,
          0.0000141985, 0.0000105219, 0.0000063776, 0.0000066150, 0.0000048920, 0.0000030192,
          0.0000052192, 0.0000041134, 0.0000032012, 0.0000024875, 0.0000043212, 0.0000020498,
          0.0000021156, 0.0000016577, 0.0000017233, 0.0000022923, 0.0000014317},
      {0.0003173450, 0.0001615616, 0.0002465415, 0.0001728705, 0.0001195043, 0.0001124985,
          0.0000808254, 0.0000581363, 0.0000559227, 0.0000404378, 0.0000518356, 0.0000298811,
          0.0000287398, 0.0000217204, 0.0000164841, 0.0000212488, 0.0000125514, 0.0000391799,
          0.0000094891, 0.0000122914, 0.0000098505, 0.0000056297, 0.0000043963, 0.0000035122,
          0.0000027253, 0.0000036963, 0.0000036421, 0.0000029377, 0.0000029280, 0.0000023696,
          0.0000018645, 0.0000019407, 0.0000034365, 0.0000015806, 0.0000016369},
      {0.0002034570, 0.0002513188, 0.0001762470, 0.0001965929, 0.0001088866, 0.0000970825,
          0.0000933490, 0.0000527740, 0.0000505098, 0.0000632481, 0.0000350543, 0.0000258896,
          0.0000259519, 0.0000255054, 0.0000143195, 0.0000190136, 0.0000144451, 0.0000140036,
          0.0000112725, 0.0000083816, 0.0000085712, 0.0000069453, 0.0000066073, 0.0000031690,
          0.0000041402, 0.0000041959, 0.0000033728, 0.0000044110, 0.0000034619, 0.0000026678,
          0.0000028800, 0.0000017440, 0.0000023097, 0.0000023890, 0.0000011281},
      {0.0003173450, 0.0002881490, 0.0002542859, 0.0001362548, 0.0001198331, 0.0000882116,
          0.0000491107, 0.0000794234, 0.0000441065, 0.0000554430, 0.0000402785, 0.0000309569,
          0.0000389716, 0.0000224382, 0.0000133023, 0.0000128908, 0.0000166648, 0.0000098504,
          0.0000168967, 0.0000058525, 0.0000100473, 0.0000076106, 0.0000046945, 0.0000060371,
          0.0000047826, 0.0000050076, 0.0000038162, 0.0000030179, 0.0000040997, 0.0000031539,
          0.0000025083, 0.0000026421, 0.0000012553, 0.0000021583, 0.0000017131},
      {0.0003638510, 0.0002513188, 0.0001683766, 0.0001988799, 0.0001075372, 0.0000768423,
          0.0000970468, 0.0000718384, 0.0000503851, 0.0000488747, 0.0000366413, 0.0000347281,
          0.0000266521, 0.0000494349, 0.0000113959, 0.0000194469, 0.0000193641, 0.0000112659,
          0.0000150531, 0.0000114910, 0.0000114040, 0.0000069817, 0.0000040844, 0.0000054297,
          0.0000073053, 0.0000056681, 0.0000034285, 0.0000027184, 0.0000021341, 0.0000027938,
          0.0000038826, 0.0000023261, 0.0000018904, 0.0000019351, 0.0000015328},
      {0.0003173450, 0.0002881490, 0.0002572765, 0.0001387128, 0.0001250973, 0.0001195201,
          0.0001122930, 0.0000803366, 0.0000598658, 0.0000337857, 0.0000415339, 0.0000411285,
          0.0000401843, 0.0000296463, 0.0000176050, 0.0000132375, 0.0000170160, 0.0000103558,
          0.0000077852, 0.0000077023, 0.0000104732, 0.0000078826, 0.0000062117, 0.0000048778,
          0.0000029049, 0.0000066654, 0.0000039646, 0.0000031398, 0.0000025008, 0.0000032680,
          0.0000015583, 0.0000021329, 0.0000016764, 0.0000013264, 0.0000023307},
      {0.0003638510, 0.0002513188, 0.0004274696, 0.0001569505, 0.0001464390, 0.0001043027,
          0.0000988995, 0.0000724009, 0.0000309738, 0.0000379496, 0.0000379432, 0.0000274781,
          0.0000270938, 0.0000272185, 0.0000200736, 0.0000153409, 0.0000117918, 0.0000115361,
          0.0000118728, 0.0000090880, 0.0000090780, 0.0000071394, 0.0000070632, 0.0000055408,
          0.0000044585, 0.0000044629, 0.0000045843, 0.0000036666, 0.0000036629, 0.0000029161,
          0.0000030775, 0.0000014548, 0.0000015190, 0.0000026139, 0.0000027090},
      {0.0003173450, 0.0001808418, 0.0003691083, 0.0001392450, 0.0001271655, 0.0001179238,
          0.0000668874, 0.0000486683, 0.0001402268, 0.0000345549, 0.0000427275, 0.0000322248,
          0.0000242643, 0.0000306298, 0.0000237162, 0.0000137897, 0.0000173833, 0.0000137120,
          0.0000136733, 0.0000079919, 0.0000106842, 0.0000081199, 0.0000083023, 0.0000038979,
          0.0000065057, 0.0000031173, 0.0000041200, 0.0000024404, 0.0000033038, 0.0000044811,
          0.0000013108, 0.0000021434, 0.0000038457, 0.0000013889, 0.0000018266},
      {0.0003638510, 0.0003311633, 0.0002311574, 0.0001570073, 0.0001481106, 0.0001066970,
          0.0000994342, 0.0000741905, 0.0000698829, 0.0000671449, 0.0000384136, 0.0000285075,
          0.0000274892, 0.0000214890, 0.0000207513, 0.0000205235, 0.0000120881, 0.0000154563,
          0.0000158147, 0.0000121271, 0.0000092994, 0.0000072500, 0.0000055901, 0.0000043607,
          0.0000035481, 0.0000035848, 0.0000036635, 0.0000029068, 0.0000037919, 0.0000030252,
          0.0000031871, 0.0000032511, 0.0000019977, 0.0000015669, 0.0000012902}
  };

  /**
   * A position offset parameter for the Neck integral, parameterized by two input atomic radii
   * sizes (in Angstroms).
   * <p>
   * Bij is a (non-symmetric) 35x35 array of parameterized constants last updated 09 Apr 21 by Rae
   * Corrigan.
   * <p>
   * The units of the Bij matrix are Angstroms.
   */
  private static final double[][] Bij = {
      {-1.20, -0.25, -0.30, -0.15, -0.40, -0.85, -0.90, -0.75, -0.80, -0.65, -0.70, -0.75, -0.40,
          -0.65, -0.50, -0.35, -0.40, -0.65, 0.10, -0.15, -0.20, -0.25, 0.10, 0.25, 0.20, 0.15, 0.30,
          0.25, 0.40, 0.55, 0.90, 0.45, 0.40, 0.75, 0.70},
      {-1.05, -1.10, -1.15, 0.00, -1.05, -1.10, -1.15, -0.80, -0.65, -1.10, -0.75, -0.60, -0.65,
          -0.50, -0.75, -0.40, -0.45, -0.70, -0.15, -0.40, -0.05, -0.10, -0.15, 0.00, 0.15, 0.50,
          0.45, 0.00, 0.35, 0.10, 0.25, 0.40, 0.55, 0.50, 1.05},
      {-0.90, -0.95, -1.00, -1.05, -0.90, -0.95, -0.80, -0.65, -0.90, -0.75, -0.40, -0.65, -0.70,
          -0.35, -0.40, -0.45, -0.50, -0.35, -0.40, -0.05, -0.10, -0.15, -0.20, -0.05, 0.30, 0.05,
          0.00, 0.15, 0.50, 0.25, 0.40, 0.55, 0.70, 0.45, 0.60},
      {-0.75, -0.80, -0.85, -0.90, -1.15, -0.80, -1.05, -0.90, -0.75, -0.60, -0.45, -0.30, -0.35,
          -0.40, -0.25, -0.30, -0.35, 0.00, -0.05, -0.30, 0.05, -0.20, 0.15, 0.10, 0.05, 0.20, 0.35,
          0.50, 0.45, 0.40, 0.35, 0.50, 0.45, 0.80, 0.75},
      {-0.60, -0.65, -0.70, -0.75, -1.00, -0.85, -0.70, -0.75, -1.00, -0.65, -0.50, -0.75, -0.40,
          -0.65, -0.50, -0.15, -0.40, 0.35, -0.10, 0.05, -0.20, 0.15, 0.10, 0.05, 0.00, 0.15, 0.30,
          0.05, 0.40, 0.35, 0.50, 0.65, 0.40, 0.75, 0.70},
      {-0.45, -0.50, -0.55, -0.60, -0.85, -0.90, -0.55, -0.80, -0.85, -0.50, -0.75, -0.60, -0.25,
          0.70, -0.35, -0.40, -0.25, 0.50, -0.35, -0.20, -0.05, 0.10, -0.15, 0.20, 0.15, 0.10, 0.25,
          0.40, 0.55, 0.30, 0.65, 0.40, 0.35, 0.50, 0.65},
      {-0.30, -0.35, -0.40, -0.45, -0.90, -0.95, -0.60, -0.65, -0.50, -0.75, -0.60, -0.65, -0.50,
          -0.55, -0.40, -0.25, -0.50, 0.65, -0.20, -0.05, 0.10, 0.05, 0.20, -0.05, 0.30, 0.45, 0.40,
          0.55, 0.50, 0.65, 0.40, 0.75, 0.70, 0.65, 0.80},
      {-0.35, -0.20, -0.25, -1.15, -0.75, -0.80, -0.85, -0.50, -0.55, -0.60, -0.45, -0.30, -0.55,
          -0.40, -0.25, -0.50, -0.15, 0.80, -0.05, -0.10, 0.25, 0.20, 0.15, 0.10, 0.25, 0.20, 0.35,
          0.10, 0.45, 0.60, 0.35, 0.50, 0.65, 0.60, 0.75},
      {-0.80, -1.25, -0.10, -0.15, -0.60, -0.65, -0.70, -0.95, -0.80, -0.65, -0.70, -0.35, -0.40,
          -0.45, -0.30, -0.15, 0.00, -0.25, 0.10, -0.35, 0.00, 0.35, -0.10, 0.05, 0.40, 0.15, 0.30,
          0.45, 0.60, 0.75, 0.70, 0.65, 0.80, 0.75, 0.70},
      {-0.65, -0.50, -1.15, -0.60, -1.05, -0.50, -0.55, -0.80, -0.45, -0.30, -0.55, -0.20, -0.25,
          0.10, 0.05, -0.20, -0.25, -0.30, 0.05, 0.00, 0.15, 0.10, 0.25, 0.00, 0.35, 0.10, 0.45,
          0.20, 0.55, 0.30, 0.45, 0.80, 0.35, 0.90, 0.85},
      {-0.50, -0.55, -0.60, -0.85, -0.50, -0.55, -0.60, -0.45, -0.30, -0.35, -0.60, -0.65, -0.30,
          -0.15, -0.20, -0.05, 0.10, -0.15, 0.20, 0.15, 0.30, -0.15, 0.40, 0.15, 0.30, 0.25, 0.40,
          0.55, 0.30, 0.45, 0.60, 0.55, 0.70, 1.05, 0.80},
      {-0.35, -0.40, -0.45, -0.70, -0.95, -0.60, -0.65, -0.70, -0.35, -0.20, -0.65, -0.50, -0.55,
          -0.40, -0.05, -0.50, -0.15, 0.00, -0.05, -0.10, 0.25, 0.20, 0.15, 0.30, 0.25, 0.40, 0.55,
          0.70, 0.45, 0.40, 0.75, 0.70, 0.85, 0.60, 0.75},
      {-0.40, -0.25, -0.30, -0.75, -0.80, -0.65, -0.50, -0.55, -0.40, -0.45, -0.30, -0.35, -0.40,
          -0.25, -0.10, -0.15, 0.00, 0.55, -0.10, 0.05, 0.00, 0.35, 0.10, 0.25, 0.60, 0.35, 0.50,
          0.25, 0.80, 0.55, 0.70, 0.85, 1.00, 0.95, 1.10},
      {-0.25, -0.30, -0.15, -0.40, -0.65, -0.50, -0.35, -0.40, -0.25, -0.30, -0.15, -0.20, -0.45,
          -0.10, 0.05, -0.40, -0.05, 0.10, 0.05, 0.00, 0.35, 0.50, 0.45, 0.40, 0.55, 0.50, 0.65,
          0.40, 0.75, 0.90, 0.65, 0.40, 0.95, 0.70, 1.05},
      {-0.90, -0.15, -0.20, -0.45, -0.70, -0.55, -0.40, -0.45, -0.30, -0.35, -0.20, -0.05, -0.10,
          0.05, -0.20, -0.05, 0.10, -0.15, 0.20, -0.25, -0.10, 0.45, 0.00, 0.55, 0.50, 0.45, 0.60,
          0.55, 0.70, 0.25, 0.80, 0.95, 0.90, 1.05, 0.80},
      {-0.35, 0.00, -0.85, -0.30, -0.55, -0.40, -0.25, -0.30, -0.35, -0.20, -0.45, 0.10, -0.35,
          -0.20, -0.05, -0.10, 0.25, 0.00, 0.15, 0.30, 0.25, 0.20, 0.35, 0.50, 0.45, 0.60, 0.75,
          0.70, 0.65, 0.40, 0.95, 0.90, 0.65, 0.80, 0.95},
      {0.00, -0.65, -1.30, -0.35, -0.60, -0.25, -0.50, -0.35, 0.00, -0.25, -0.30, -0.15, 0.00, -0.05,
          -0.10, 0.25, 0.40, -0.05, 0.10, 0.05, 0.20, 0.35, 0.10, 0.45, 0.20, 0.35, 0.50, 0.85, 0.40,
          0.55, 1.10, 1.05, 1.00, 0.95, 1.30},
      {-0.25, -0.70, -0.95, -0.40, -0.25, -0.50, -0.35, -0.20, -0.25, -0.10, -0.15, -0.20, 0.15,
          0.10, 0.05, 0.00, 0.15, 0.30, 0.25, 0.40, 0.55, 0.10, 0.45, 0.40, 0.55, 0.70, 0.25, 0.40,
          0.95, 0.50, 0.65, 1.20, 0.75, 0.70, 1.05},
      {-0.50, -0.15, -0.60, -0.25, -0.50, -0.15, -0.20, 0.35, 0.10, 0.05, -0.20, -0.25, 0.10, 0.05,
          0.00, 0.15, -0.10, 0.05, 0.60, 0.35, 0.50, 0.25, 0.40, 0.55, 0.70, 0.65, 0.60, 0.75, 0.70,
          0.65, 0.40, 0.75, 0.90, 1.05, 1.20},
      {-0.15, -0.40, -0.05, -0.30, -0.35, -0.60, -0.05, -0.10, -0.35, 0.00, -0.05, -0.10, 0.05,
          -0.40, 0.15, 0.10, 0.05, 0.60, 0.35, 0.30, 0.25, 0.40, 0.55, 0.70, 0.85, 0.60, 0.95, 0.50,
          0.85, 1.20, 0.75, 0.90, 1.05, 1.00, 1.15},
      {0.00, -0.05, 0.10, 0.05, -0.40, -0.05, -0.10, -0.15, 0.00, -0.05, -0.10, -0.15, -0.20, 0.35,
          0.30, 0.25, 0.40, 0.35, 0.50, 0.45, 0.40, 0.55, 0.50, 0.45, 1.00, 0.75, 0.90, 0.85, 0.60,
          0.95, 1.10, 0.65, 1.20, 1.15, 1.30},
      {-0.45, 0.10, -0.35, 0.00, -0.05, -0.30, 0.05, -0.20, -0.05, 0.30, 0.05, 0.00, 0.35, 0.30,
          0.45, 0.20, -0.05, 0.70, 0.25, 0.40, 0.55, 0.30, 0.65, 0.60, 0.35, 0.90, 0.85, 0.60, 0.75,
          1.10, 0.85, 0.80, 1.35, 0.90, 1.05},
      {0.10, 0.25, -0.20, -0.05, -0.10, -0.15, 0.00, -0.05, -0.10, 0.25, 0.20, 0.15, -0.10, 0.45,
          0.20, 0.35, 0.10, 0.65, 0.40, 0.55, 0.50, 0.65, 0.20, 0.35, 0.70, 0.45, 1.00, 0.75, 0.90,
          1.25, 1.00, 0.95, 0.90, 1.25, 1.60},
      {0.25, -0.40, -0.25, -0.30, 0.05, -0.20, 0.15, 0.10, 0.05, 0.00, 0.15, 0.10, 0.05, 0.20, 0.35,
          0.30, 0.25, 0.20, 0.55, 0.70, 0.65, 0.20, 0.35, 0.90, 0.85, 0.80, 0.95, 0.90, 1.05, 0.80,
          0.75, 1.10, 1.05, 1.00, 1.35},
      {-0.60, 0.35, -0.10, -0.15, -0.20, -0.05, -0.10, 0.05, 0.00, 0.15, 0.30, 0.25, 0.20, -0.05,
          0.10, 0.45, 0.40, 0.35, 0.70, 0.65, 0.60, 0.35, 0.90, 0.65, 0.80, 0.95, 0.70, 1.05, 1.20,
          0.95, 0.70, 1.25, 1.20, 1.35, 0.90},
      {-0.25, -0.50, 0.05, -0.20, 0.15, 0.10, 0.25, 0.20, 0.15, 0.10, 0.05, 0.20, 0.35, 0.10, 0.45,
          0.60, 0.35, 1.10, 0.65, 0.60, 0.75, 0.30, 0.45, 0.80, 0.75, 0.70, 1.05, 1.20, 0.95, 0.70,
          0.85, 1.40, 1.35, 1.30, 1.05},
      {-0.50, -0.15, 0.00, -0.05, -0.10, 0.05, 0.40, 0.15, 0.10, 0.25, 0.20, 0.35, 0.50, 0.25, 0.60,
          0.35, 0.50, 0.25, 0.80, 0.75, 0.50, 0.65, 0.60, 0.35, 0.90, 0.85, 0.80, 0.75, 1.30, 0.85,
          1.00, 0.95, 1.10, 1.45, 1.20},
      {-0.15, -0.40, 0.15, 0.10, 0.05, 0.20, 0.15, 0.10, 0.25, 0.20, 0.55, 0.30, 0.45, 0.40, 0.35,
          0.70, 0.45, 1.40, 0.55, 0.90, 0.85, 0.60, 0.55, 0.50, 0.45, 0.80, 0.95, 0.90, 1.05, 1.00,
          0.95, 1.10, 1.65, 1.20, 1.35},
      {-0.40, -0.05, -0.10, 0.25, 0.00, 0.15, 0.30, 0.05, 0.20, 0.55, 0.30, 0.25, 0.40, 0.55, 0.30,
          0.65, 0.60, 0.75, 0.70, 0.65, 0.80, 0.75, 0.90, 0.45, 0.80, 0.95, 0.90, 1.25, 1.20, 1.15,
          1.30, 1.05, 1.40, 1.55, 1.10},
      {-0.05, 0.10, 0.25, 0.00, 0.15, 0.10, -0.15, 0.40, 0.15, 0.50, 0.45, 0.40, 0.75, 0.50, 0.25,
          0.40, 0.75, 0.50, 1.05, 0.40, 0.95, 0.90, 0.65, 1.00, 0.95, 1.10, 1.05, 1.00, 1.35, 1.30,
          1.25, 1.40, 0.95, 1.50, 1.45},
      {0.10, 0.05, 0.00, 0.35, 0.10, 0.05, 0.40, 0.35, 0.30, 0.45, 0.40, 0.55, 0.50, 1.05, 0.20,
          0.75, 0.90, 0.65, 1.00, 0.95, 1.10, 0.85, 0.60, 0.95, 1.30, 1.25, 1.00, 0.95, 0.90, 1.25,
          1.60, 1.35, 1.30, 1.45, 1.40},
      {0.05, 0.20, 0.35, 0.10, 0.25, 0.40, 0.55, 0.50, 0.45, 0.20, 0.55, 0.70, 0.85, 0.80, 0.55,
          0.50, 0.85, 0.60, 0.55, 0.70, 1.05, 1.00, 0.95, 0.90, 0.65, 1.40, 1.15, 1.10, 1.05, 1.40,
          0.95, 1.30, 1.25, 1.20, 1.75},
      {0.20, 0.15, 0.70, 0.25, 0.40, 0.35, 0.50, 0.45, 0.00, 0.35, 0.50, 0.45, 0.60, 0.75, 0.70,
          0.65, 0.60, 0.75, 0.90, 0.85, 1.00, 0.95, 1.10, 1.05, 1.00, 1.15, 1.30, 1.25, 1.40, 1.35,
          1.50, 1.05, 1.20, 1.75, 1.90},
      {0.15, -0.10, 0.65, 0.20, 0.35, 0.50, 0.25, 0.20, 1.15, 0.30, 0.65, 0.60, 0.55, 0.90, 0.85,
          0.60, 0.95, 0.90, 1.05, 0.80, 1.15, 1.10, 1.25, 0.80, 1.35, 0.90, 1.25, 1.00, 1.35, 1.70,
          0.85, 1.40, 1.95, 1.30, 1.65},
      {0.30, 0.45, 0.40, 0.35, 0.50, 0.45, 0.60, 0.55, 0.70, 0.85, 0.60, 0.55, 0.70, 0.65, 0.80,
          0.95, 0.70, 1.05, 1.20, 1.15, 1.10, 1.05, 1.00, 0.95, 0.90, 1.05, 1.20, 1.15, 1.50, 1.45,
          1.60, 1.75, 1.50, 1.45, 1.40}
  };

  public static double[] getNeckConstants(double rhoDescreened, double rhoDescreening) {

    // Determine low and high values for integration
    int[] boundsI = getBounds(rhoDescreened);
    int[] boundsJ = getBounds(rhoDescreening);

    int lowI = boundsI[0];
    int highI = boundsI[1];
    int lowJ = boundsJ[0];
    int highJ = boundsJ[1];

    // Interpolate/Extrapolate Aij and Bij constant values
    double aij = interpolate2D(radArray[lowI], radArray[highI], radArray[lowJ], radArray[highJ],
        rhoDescreened, rhoDescreening, Aij[lowI][lowJ], Aij[highI][lowJ], Aij[lowI][highJ],
        Aij[highI][highJ]);
    double bij = interpolate2D(radArray[lowI], radArray[highI], radArray[lowJ], radArray[highJ],
        rhoDescreened, rhoDescreening, Bij[lowI][lowJ], Bij[highI][lowJ], Bij[lowI][highJ],
        Bij[highI][highJ]);

    // Never let Aij be negative.
    if (aij < 0.0) {
      logger.warning(
          format(" Aij is less than zero in NeckIntegral for radii: %16.8f %16.8f.", rhoDescreened,
              rhoDescreening));
      aij = 0.0;
    }

    return new double[] {aij, bij};
  }

  private static double interpolate1D(double y1, double y2, double y, double fxy1, double fxy2) {
    double frac1 = (y2 - y) / (y2 - y1);
    double frac2 = (y - y1) / (y2 - y1);
    double product1 = frac1 * fxy1;
    double product2 = frac2 * fxy2;
    return product1 + product2;
  }

  private static double interpolate2D(double x1, double x2, double y1, double y2, double x, double y,
      double fx1y1, double fx2y1, double fx1y2, double fx2y2) {
    double fxy1 = (x2 - x) / (x2 - x1) * fx1y1 + (x - x1) / (x2 - x1) * fx2y1;
    double fxy2 = (x2 - x) / (x2 - x1) * fx1y2 + (x - x1) / (x2 - x1) * fx2y2;

    return (y2 - y) / (y2 - y1) * fxy1 + (y - y1) / (y2 - y1) * fxy2;
  }

  // Aij AO: 0.0000947808
  private static final double[][] AijOrig = {
      {0.0000947808, 0.0001137020, 0.0001001180, 0.0001195900, 0.0001050630, 0.0000922010,
          0.0001099390, 0.0000961817, 0.0001143420, 0.0000999772, 0.0001184650, 0.0001035490,
          0.0001227270},
      {0.0000789821, 0.0000948444, 0.0000836245, 0.0000733297, 0.0000878314, 0.0000769799,
          0.0000919335, 0.0000804789, 0.0000958057, 0.0000839558, 0.0000997966, 0.0000870743,
          0.0001031750},
      {0.0000665366, 0.0000799715, 0.0000703720, 0.0000842561, 0.0000740921, 0.0000649757,
          0.0000775663, 0.0000681323, 0.0000811720, 0.0000708781, 0.0000842888, 0.0000735226,
          0.0000872208},
      {0.0000560640, 0.0000673256, 0.0000593409, 0.0000523516, 0.0000625504, 0.0000549136,
          0.0000656357, 0.0000782465, 0.0000685443, 0.0000599304, 0.0000712967, 0.0000622049,
          0.0000738641},
      {0.0000476864, 0.0000573346, 0.0000505739, 0.0000606430, 0.0000534346, 0.0000638940,
          0.0000560721, 0.0000668434, 0.0000585494, 0.0000511473, 0.0000608988, 0.0000531489,
          0.0000632062},
      {0.0000406501, 0.0000489724, 0.0000432430, 0.0000519647, 0.0000456150, 0.0000545524,
          0.0000478982, 0.0000571349, 0.0000500254, 0.0000437652, 0.0000521263, 0.0000455330,
          0.0000540793},
      {0.0000349541, 0.0000421574, 0.0000370920, 0.0000445857, 0.0000391597, 0.0000469342,
          0.0000411581, 0.0000491397, 0.0000430438, 0.0000512731, 0.0000448652, 0.0000392138,
          0.0000466779},
      {0.0000411296, 0.0000362900, 0.0000319527, 0.0000384631, 0.0000337429, 0.0000404799,
          0.0000355183, 0.0000424310, 0.0000371662, 0.0000443414, 0.0000388286, 0.0000461746,
          0.0000403668},
      {0.0000355236, 0.0000313722, 0.0000276089, 0.0000332680, 0.0000292288, 0.0000350426,
          0.0000307676, 0.0000367966, 0.0000323063, 0.0000385546, 0.0000337092, 0.0000400815,
          0.0000350018},
      {0.0000309168, 0.0000272940, 0.0000240680, 0.0000289772, 0.0000254577, 0.0000305399,
          0.0000268793, 0.0000321616, 0.0000281553, 0.0000336062, 0.0000294027, 0.0000349824,
          0.0000305618},
      {0.0000269536, 0.0000237946, 0.0000287199, 0.0000252553, 0.0000222642, 0.0000266807,
          0.0000234688, 0.0000280674, 0.0000245787, 0.0000293847, 0.0000256658, 0.0000305777,
          0.0000267274},
      {0.0000236280, 0.0000208424, 0.0000251832, 0.0000221566, 0.0000195124, 0.0000234327,
          0.0000205702, 0.0000246477, 0.0000215557, 0.0000257936, 0.0000225548, 0.0000268717,
          0.0000234796},
      {0.0000207603, 0.0000182939, 0.0000161523, 0.0000195050, 0.0000234519, 0.0000206073,
          0.0000180540, 0.0000216798, 0.0000189606, 0.0000226817, 0.0000198338, 0.0000236529,
          0.0000206561}
  };

  // Bij AO: 0.00
  private static final double[][] BijOrig = {
      {0.00, 0.15, 0.10, 0.25, 0.20, 0.15, 0.30, 0.25, 0.40, 0.35, 0.50, 0.45, 0.60},
      {0.05, 0.20, 0.15, 0.10, 0.25, 0.20, 0.35, 0.30, 0.45, 0.40, 0.55, 0.50, 0.65},
      {0.10, 0.25, 0.20, 0.35, 0.30, 0.25, 0.40, 0.35, 0.50, 0.45, 0.60, 0.55, 0.70},
      {0.15, 0.30, 0.25, 0.20, 0.35, 0.30, 0.45, 0.60, 0.55, 0.50, 0.65, 0.60, 0.75},
      {0.20, 0.35, 0.30, 0.45, 0.40, 0.55, 0.50, 0.65, 0.60, 0.55, 0.70, 0.65, 0.80},
      {0.25, 0.40, 0.35, 0.50, 0.45, 0.60, 0.55, 0.70, 0.65, 0.60, 0.75, 0.70, 0.85},
      {0.30, 0.45, 0.40, 0.55, 0.50, 0.65, 0.60, 0.75, 0.70, 0.85, 0.80, 0.75, 0.90},
      {0.55, 0.50, 0.45, 0.60, 0.55, 0.70, 0.65, 0.80, 0.75, 0.90, 0.85, 1.00, 0.95},
      {0.60, 0.55, 0.50, 0.65, 0.60, 0.75, 0.70, 0.85, 0.80, 0.95, 0.90, 1.05, 1.00},
      {0.65, 0.60, 0.55, 0.70, 0.65, 0.80, 0.75, 0.90, 0.85, 1.00, 0.95, 1.10, 1.05},
      {0.70, 0.65, 0.80, 0.75, 0.70, 0.85, 0.80, 0.95, 0.90, 1.05, 1.00, 1.15, 1.10},
      {0.75, 0.70, 0.85, 0.80, 0.75, 0.90, 0.85, 1.00, 0.95, 1.10, 1.05, 1.20, 1.15},
      {0.80, 0.75, 0.70, 0.85, 1.00, 0.95, 0.90, 1.05, 1.00, 1.15, 1.10, 1.25, 1.20}
  };

}
