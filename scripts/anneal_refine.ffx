import ffx.algorithms.SimulatedAnnealing;
import ffx.potential.bonded.MolecularAssembly;
import ffx.xray.XRayStructure;
import ffx.xray.RefinementEnergy;
import ffx.xray.RefinementMinimize;
import ffx.xray.RefinementMinimize.RefinementMode;

open("examples/1N7S.pdb");

XRayStructure xray = new XRayStructure(active, active.getProperties());

xray.scalebulkfit();
xray.printstats();

int macrocyles = 3;

for (i = 0; i < macrocycles; i++) {
  RefinementEnergy refinementEnergy = new RefinementEnergy(active, xray,
  		 3 * active.getAtomArray().length, 0, 0, RefinementMode.COORDINATES);
  SimulatedAnnealing simulatedAnnealing = new SimulatedAnnealing(active, refinementEnergy,
		 active.getProperties(), null);

  double highTemperature = 1000.0;
  double lowTemperature = 100.0;
  int annealingSteps = 10;
  int mdSteps = 5;

  simulatedAnnealing.anneal(highTemperature, lowTemperature, annealingSteps, mdSteps);

  xray.scalebulkfit();
  xray.printstats();

  RefinementMinimize refinementMinimize = new RefinementMinimize(active, xray, RefinementMode.COORDINATES_AND_BFACTORS);
  refinementMinimize.minimize(0.5);

  xray.scalebulkfit();
  xray.printstats();
}

xray.writedata("/tmp/1N7S_anneal_refine.mtz");
saveAsPDB(new File("/tmp/1N7S_anneal_refine.pdb"));
